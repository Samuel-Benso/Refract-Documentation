{
  "pluginId": "default",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "noIndex": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "tutorialSidebar": [
      {
        "type": "link",
        "label": "Welcome to Refract",
        "href": "/docs/intro",
        "docId": "intro",
        "unlisted": false
      },
      {
        "type": "link",
        "label": "Getting Started",
        "href": "/docs/getting-started",
        "docId": "getting-started",
        "unlisted": false
      },
      {
        "type": "category",
        "label": "Core Concepts",
        "items": [
          {
            "type": "link",
            "label": "Components",
            "href": "/docs/concepts/components",
            "docId": "concepts/components",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Refractions",
            "href": "/docs/concepts/refractions",
            "docId": "concepts/refractions",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Lenses",
            "href": "/docs/concepts/lenses",
            "docId": "concepts/lenses",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Optics",
            "href": "/docs/concepts/optics",
            "docId": "concepts/optics",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Effects",
            "href": "/docs/concepts/effects",
            "docId": "concepts/effects",
            "unlisted": false
          }
        ],
        "collapsed": true,
        "collapsible": true
      },
      {
        "type": "category",
        "label": "API Reference",
        "items": [
          {
            "type": "link",
            "label": "API Reference Overview",
            "href": "/docs/api/overview",
            "docId": "api/overview",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "createApp",
            "href": "/docs/api/createApp",
            "docId": "api/createApp",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "createComponent",
            "href": "/docs/api/createComponent",
            "docId": "api/createComponent",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "useRefraction",
            "href": "/docs/api/useRefraction",
            "docId": "api/useRefraction",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "useEffect",
            "href": "/docs/api/useEffect",
            "docId": "api/useEffect",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "useOptic",
            "href": "/docs/api/useOptic",
            "docId": "api/useOptic",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "useFlash",
            "href": "/docs/api/useFlash",
            "docId": "api/useFlash",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "useLens",
            "href": "/docs/api/useLens",
            "docId": "api/useLens",
            "unlisted": false
          }
        ],
        "collapsed": true,
        "collapsible": true
      },
      {
        "type": "category",
        "label": "Tutorials",
        "items": [
          {
            "type": "link",
            "label": "Building a Counter App",
            "href": "/docs/tutorials/counter-app",
            "docId": "tutorials/counter-app",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Building a Todo List App",
            "href": "/docs/tutorials/todo-list",
            "docId": "tutorials/todo-list",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Global Theme Management",
            "href": "/docs/tutorials/global-theme",
            "docId": "tutorials/global-theme",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Animation Basics",
            "href": "/docs/tutorials/animation-basics",
            "docId": "tutorials/animation-basics",
            "unlisted": false
          }
        ],
        "collapsed": true,
        "collapsible": true
      },
      {
        "type": "link",
        "label": "Contributing to Refract",
        "href": "/docs/contributing",
        "docId": "contributing",
        "unlisted": false
      }
    ]
  },
  "docs": {
    "api/createApp": {
      "id": "api/createApp",
      "title": "createApp",
      "description": "The createApp function initializes a new Refract application instance. It serves as the entry point for your application, handling the root component setup and providing configuration options for the entire application.",
      "sidebar": "tutorialSidebar"
    },
    "api/createComponent": {
      "id": "api/createComponent",
      "title": "createComponent",
      "description": "The createComponent function helps you build interactive parts of your app in Refract. Think of components as building blocks - like buttons, forms, or entire pages. When you create a component, it automatically updates when its data changes.",
      "sidebar": "tutorialSidebar"
    },
    "api/overview": {
      "id": "api/overview",
      "title": "API Reference Overview",
      "description": "This section provides comprehensive documentation for all Refract APIs, including core functions, hooks, utilities, and configuration options. Each API is documented with detailed descriptions, parameters, return values, and practical examples.",
      "sidebar": "tutorialSidebar"
    },
    "api/useEffect": {
      "id": "api/useEffect",
      "title": "useEffect",
      "description": "The useEffect hook handles side effects and lifecycle management in Refract components. It provides a declarative way to perform operations like data fetching, subscriptions, timers, and DOM manipulation while ensuring proper cleanup and dependency tracking.",
      "sidebar": "tutorialSidebar"
    },
    "api/useFlash": {
      "id": "api/useFlash",
      "title": "useFlash",
      "description": "The useFlash hook executes effects after the component has rendered and the DOM has been updated. It's specifically designed for operations that need to happen after the render cycle, such as animations, DOM measurements, and focus management.",
      "sidebar": "tutorialSidebar"
    },
    "api/useLens": {
      "id": "api/useLens",
      "title": "useLens",
      "description": "The useLens hook provides access to the lens system within Refract components. The lens is the primary interface for accessing reactive features like state management, effects, and optics in a component-scoped manner.",
      "sidebar": "tutorialSidebar"
    },
    "api/useOptic": {
      "id": "api/useOptic",
      "title": "useOptic",
      "description": "The useOptic hook allows you to use reusable logic patterns (optics) within components. Optics encapsulate complex stateful logic that can be shared across multiple components, providing a clean way to compose functionality.",
      "sidebar": "tutorialSidebar"
    },
    "api/useRefraction": {
      "id": "api/useRefraction",
      "title": "useRefraction",
      "description": "The useRefraction hook creates reactive state variables that automatically trigger UI updates when their values change. It's the primary way to manage state in Refract components, providing a simple yet powerful interface for reactive programming.",
      "sidebar": "tutorialSidebar"
    },
    "concepts/components": {
      "id": "concepts/components",
      "title": "Components",
      "description": "Components are the building blocks of Refract applications. They are pure functions that describe what the UI should look like based on the current state. Unlike traditional frameworks, Refract components are created using the createComponent() function and receive reactive capabilities through the lens system.",
      "sidebar": "tutorialSidebar"
    },
    "concepts/effects": {
      "id": "concepts/effects",
      "title": "Effects",
      "description": "Effects in Refract handle side effects and lifecycle management within components. They provide a clean, declarative way to manage asynchronous operations, subscriptions, timers, and other side effects while ensuring proper cleanup and dependency tracking.",
      "sidebar": "tutorialSidebar"
    },
    "concepts/lenses": {
      "id": "concepts/lenses",
      "title": "Lenses",
      "description": "Lenses are Refract's scoped interface to reactive features within components. They provide a clean, organized way to access refractions, effects, and optics while maintaining proper component boundaries and lifecycle management.",
      "sidebar": "tutorialSidebar"
    },
    "concepts/optics": {
      "id": "concepts/optics",
      "title": "Optics",
      "description": "Optics are Refract's composable logic units that encapsulate reusable patterns and behaviors. They're similar to React hooks but designed specifically for Refract's reactive system, providing a clean way to share stateful logic between components while maintaining proper reactivity and lifecycle management.",
      "sidebar": "tutorialSidebar"
    },
    "concepts/refractions": {
      "id": "concepts/refractions",
      "title": "Refractions",
      "description": "Refractions are the core reactive primitives in Refract. They represent units of state that automatically notify the UI when their values change. Think of them as reactive variables that eliminate the need for manual state management and re-rendering logic.",
      "sidebar": "tutorialSidebar"
    },
    "contributing": {
      "id": "contributing",
      "title": "Contributing to Refract",
      "description": "Thank you for your interest in contributing to Refract! This guide will help you get started with contributing to the framework and its documentation.",
      "sidebar": "tutorialSidebar"
    },
    "getting-started": {
      "id": "getting-started",
      "title": "Getting Started",
      "description": "Learn the fundamentals of Refract and build your first reactive application. This guide assumes you have already installed Refract and are ready to start coding.",
      "sidebar": "tutorialSidebar"
    },
    "installation": {
      "id": "installation",
      "title": "Installation",
      "description": "Get Refract installed and ready to use in your project. Choose the method that best fits your development workflow."
    },
    "intro": {
      "id": "intro",
      "title": "Welcome to Refract",
      "description": "Refract is a JavaScript framework that makes building web apps easier. It helps you create apps that automatically update when your data changes. Refract uses special tools called refractions, lenses, and optics to help you build apps that are easy to maintain and grow.",
      "sidebar": "tutorialSidebar"
    },
    "tutorials/animation-basics": {
      "id": "tutorials/animation-basics",
      "title": "Animation Basics",
      "description": "Learn how to create smooth, performant animations in Refract using refractions, effects, and CSS transitions.",
      "sidebar": "tutorialSidebar"
    },
    "tutorials/counter-app": {
      "id": "tutorials/counter-app",
      "title": "Building a Counter App",
      "description": "In this tutorial, you'll build a complete counter application using Refract. This hands-on guide will teach you the fundamentals of Refract development, including state management, effects, and component composition.",
      "sidebar": "tutorialSidebar"
    },
    "tutorials/global-theme": {
      "id": "tutorials/global-theme",
      "title": "Global Theme Management",
      "description": "Learn how to implement a global theme system in Refract using refractions and optics for consistent styling across your application.",
      "sidebar": "tutorialSidebar"
    },
    "tutorials/todo-list": {
      "id": "tutorials/todo-list",
      "title": "Building a Todo List App",
      "description": "In this tutorial, you'll create a fully-featured todo list application using Refract. This project will teach you advanced state management, form handling, data persistence, and component composition patterns.",
      "sidebar": "tutorialSidebar"
    }
  }
}