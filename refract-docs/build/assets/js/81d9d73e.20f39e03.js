"use strict";(self.webpackChunkrefract_docs=self.webpackChunkrefract_docs||[]).push([[9300],{4820:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>o});const c=JSON.parse('{"id":"api/createOptic","title":"createOptic","description":"createOptic is a utility function that helps you create reactive references to nested state values in Refract.","source":"@site/docs/api/createOptic.md","sourceDirName":"api","slug":"/api/createOptic","permalink":"/docs/api/createOptic","draft":false,"unlisted":false,"editUrl":"https://github.com/refract-js/refract/tree/main/docs/docs/api/createOptic.md","tags":[],"version":"current","frontMatter":{"id":"createOptic","title":"createOptic"},"sidebar":"tutorialSidebar","previous":{"title":"useOptic","permalink":"/docs/api/useOptic"},"next":{"title":"useRefraction","permalink":"/docs/api/useRefraction"}}');var r=n(4848),i=n(8453);const a={id:"createOptic",title:"createOptic"},s=void 0,l={},o=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"<code>createOptic(path: string): Optic</code>",id:"createopticpath-string-optic",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Related",id:"related",level:2}];function p(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"createOptic"})," is a utility function that helps you create reactive references to nested state values in Refract."]}),"\n",(0,r.jsx)(t.h2,{id:"import",children:"Import"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"import { createOptic } from 'refract';\n"})}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"const state = {\n  user: {\n    name: 'John',\n    age: 30,\n    preferences: {\n      theme: 'dark',\n      notifications: true\n    }\n  }\n};\n\nconst nameOptic = createOptic('user.name');\nconst themeOptic = createOptic('user.preferences.theme');\n\n// Get values\nconsole.log(nameOptic.get(state)); // 'John'\nconsole.log(themeOptic.get(state)); // 'dark'\n\n// Set values\nconst newState = nameOptic.set('Jane')(state);\nconsole.log(newState.user.name); // 'Jane'\n"})}),"\n",(0,r.jsx)(t.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,r.jsx)(t.h3,{id:"createopticpath-string-optic",children:(0,r.jsx)(t.code,{children:"createOptic(path: string): Optic"})}),"\n",(0,r.jsx)(t.p,{children:"Creates an optic that can get and set values at the specified path."}),"\n",(0,r.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"path"}),": A dot-separated string representing the path to the value in the state object."]}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(t.p,{children:["An ",(0,r.jsx)(t.code,{children:"Optic"})," object with ",(0,r.jsx)(t.code,{children:"get"})," and ",(0,r.jsx)(t.code,{children:"set"})," methods."]}),"\n",(0,r.jsx)(t.h2,{id:"related",children:"Related"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"./useOptic",children:"useOptic"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"../concepts/lenses",children:"Lens API"})}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var c=n(6540);const r={},i=c.createContext(r);function a(e){const t=c.useContext(i);return c.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),c.createElement(i.Provider,{value:t},e.children)}}}]);