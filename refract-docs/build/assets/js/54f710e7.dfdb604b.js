"use strict";(self.webpackChunkrefract_docs=self.webpackChunkrefract_docs||[]).push([[4634],{7334:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=t(4848),s=t(8453);const o={},a="createComponent",i={id:"api/createComponent",title:"createComponent",description:"The createComponent function helps you build interactive parts of your app in Refract. Think of components as building blocks - like buttons, forms, or entire pages. When you create a component, it automatically updates when its data changes.",source:"@site/docs/api/createComponent.md",sourceDirName:"api",slug:"/api/createComponent",permalink:"/docs/api/createComponent",draft:!1,unlisted:!1,editUrl:"https://github.com/refract-js/refract/tree/main/docs/docs/api/createComponent.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"createApp",permalink:"/docs/api/createApp"},next:{title:"useRefraction",permalink:"/docs/api/useRefraction"}},c={},l=[{value:"How to use it",id:"how-to-use-it",level:2},{value:"What you need to provide",id:"what-you-need-to-provide",level:2},{value:"The component function",id:"the-component-function",level:3},{value:"What you get back",id:"what-you-get-back",level:2},{value:"Let&#39;s see some examples",id:"lets-see-some-examples",level:2},{value:"A simple greeting component",id:"a-simple-greeting-component",level:3},{value:"A counter with changing numbers",id:"a-counter-with-changing-numbers",level:3},{value:"A component that loads data from the internet",id:"a-component-that-loads-data-from-the-internet",level:3},{value:"Component Props",id:"component-props",level:2},{value:"Lens Parameter",id:"lens-parameter",level:3},{value:"Custom Props",id:"custom-props",level:3},{value:"Advanced Patterns",id:"advanced-patterns",level:2},{value:"Higher-Order Components",id:"higher-order-components",level:3},{value:"Render Props Pattern",id:"render-props-pattern",level:3},{value:"Compound Components",id:"compound-components",level:3},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"memo()",id:"memo",level:3},{value:"lazy()",id:"lazy",level:3},{value:"Component Lifecycle",id:"component-lifecycle",level:2},{value:"Mount Phase",id:"mount-phase",level:3},{value:"Update Phase",id:"update-phase",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Component Error Boundaries",id:"component-error-boundaries",level:3},{value:"Safe Async Operations",id:"safe-async-operations",level:3},{value:"Testing Components",id:"testing-components",level:2},{value:"Unit Testing",id:"unit-testing",level:3},{value:"Integration Testing",id:"integration-testing",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Keep Components Pure",id:"1-keep-components-pure",level:3},{value:"2. Use Descriptive Names",id:"2-use-descriptive-names",level:3},{value:"3. Extract Complex Logic",id:"3-extract-complex-logic",level:3},{value:"4. Handle Edge Cases",id:"4-handle-edge-cases",level:3},{value:"Related APIs",id:"related-apis",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"createcomponent",children:"createComponent"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"createComponent"})," function helps you build interactive parts of your app in Refract. Think of components as building blocks - like buttons, forms, or entire pages. When you create a component, it automatically updates when its data changes."]}),"\n",(0,r.jsx)(n.h2,{id:"how-to-use-it",children:"How to use it"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"createComponent((props) => JSX.Element)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"what-you-need-to-provide",children:"What you need to provide"}),"\n",(0,r.jsxs)(n.p,{children:["You need to give ",(0,r.jsx)(n.code,{children:"createComponent"})," a function that describes what your component should look like and do."]}),"\n",(0,r.jsx)(n.h3,{id:"the-component-function",children:"The component function"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"What it is:"})," A function that gets props (including a special ",(0,r.jsx)(n.code,{children:"lens"})," object) and returns JSX"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required:"})," Yes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"(props: Props & { lens: Lens }) => JSX.Element"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"lens"})," object gives you access to Refract's reactive features like state management and effects."]}),"\n",(0,r.jsx)(n.h2,{id:"what-you-get-back",children:"What you get back"}),"\n",(0,r.jsx)(n.p,{children:"You get a component that you can use anywhere in your app - in JSX code or pass to other Refract functions."}),"\n",(0,r.jsx)(n.h2,{id:"lets-see-some-examples",children:"Let's see some examples"}),"\n",(0,r.jsxs)(n.p,{children:["Here are some ways to use ",(0,r.jsx)(n.code,{children:"createComponent"})," in real projects."]}),"\n",(0,r.jsx)(n.h3,{id:"a-simple-greeting-component",children:"A simple greeting component"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { createComponent } from 'refract';\n\nconst Greeting = createComponent(({ lens, name }) => {\n  return <h1>Hello, {name}!</h1>;\n});\n\n// Usage\n<Greeting name=\"World\" />\n"})}),"\n",(0,r.jsx)(n.h3,{id:"a-counter-with-changing-numbers",children:"A counter with changing numbers"}),"\n",(0,r.jsx)(n.p,{children:"This example shows how to create a component that remembers and changes data."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const Counter = createComponent(({ lens, initialCount = 0 }) => {\n  // Create a number that can change over time\n  const count = lens.useRefraction(initialCount);\n  \n  // Functions to change the number\n  const increment = () => count.set(count.value + 1);\n  const decrement = () => count.set(count.value - 1);\n  \n  return (\n    <div>\n      <h2>Count: {count.value}</h2>\n      <button onClick={decrement}>-</button>\n      <button onClick={increment}>+</button>\n    </div>\n  );\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"a-component-that-loads-data-from-the-internet",children:"A component that loads data from the internet"}),"\n",(0,r.jsx)(n.p,{children:"This shows how to fetch user information when the component starts up."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const UserProfile = createComponent(({ lens, userId }) => {\n  // Store the user data, loading state, and any errors\n  const user = lens.useRefraction(null);\n  const loading = lens.useRefraction(true);\n  const error = lens.useRefraction(null);\n  \n  // This runs when the component starts or when userId changes\n  lens.useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        loading.set(true);\n        const response = await fetch(`/api/users/${userId}`);\n        const userData = await response.json();\n        user.set(userData);\n      } catch (err) {\n        error.set(err.message);\n      } finally {\n        loading.set(false);\n      }\n    };\n    \n    fetchUser();\n  }, [userId]); // Only run when userId changes\n  \n  // Show different things based on the current state\n  if (loading.value) return <div>Loading...</div>;\n  if (error.value) return <div>Error: {error.value}</div>;\n  \n  return (\n    <div>\n      <h2>{user.value?.name}</h2>\n      <p>{user.value?.email}</p>\n    </div>\n  );\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"component-props",children:"Component Props"}),"\n",(0,r.jsx)(n.h3,{id:"lens-parameter",children:"Lens Parameter"}),"\n",(0,r.jsxs)(n.p,{children:["Every component receives a ",(0,r.jsx)(n.code,{children:"lens"})," parameter that provides access to reactive features:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const MyComponent = createComponent(({ lens, ...otherProps }) => {\n  // lens.useRefraction() - Create reactive state\n  // lens.useEffect() - Handle side effects\n  // lens.useOptic() - Use reusable logic\n  // lens.useDerived() - Create computed values\n  // lens.batch() - Batch multiple updates\n  \n  return <div>Component content</div>;\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"custom-props",children:"Custom Props"}),"\n",(0,r.jsx)(n.p,{children:"Components can receive any custom props:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const BlogPost = createComponent(({ lens, title, content, author, publishedAt }) => {\n  const isExpanded = lens.useRefraction(false);\n  \n  return (\n    <article>\n      <h2>{title}</h2>\n      <p>By {author} on {publishedAt}</p>\n      <div>\n        {isExpanded.value ? content : `${content.substring(0, 100)}...`}\n        <button onClick={() => isExpanded.set(!isExpanded.value)}>\n          {isExpanded.value ? \'Show Less\' : \'Show More\'}\n        </button>\n      </div>\n    </article>\n  );\n});\n\n// Usage\n<BlogPost \n  title="Getting Started with Refract"\n  content="Refract is a reactive JavaScript framework..."\n  author="Jane Doe"\n  publishedAt="2024-01-15"\n/>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"advanced-patterns",children:"Advanced Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"higher-order-components",children:"Higher-Order Components"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const withLoading = (WrappedComponent) => {\n  return createComponent((props) => {\n    const { lens, isLoading, loadingText = \'Loading...\', ...otherProps } = props;\n    \n    if (isLoading) {\n      return <div className="loading">{loadingText}</div>;\n    }\n    \n    return <WrappedComponent lens={lens} {...otherProps} />;\n  });\n};\n\n// Usage\nconst DataDisplay = createComponent(({ lens, data }) => {\n  return <div>{JSON.stringify(data)}</div>;\n});\n\nconst DataDisplayWithLoading = withLoading(DataDisplay);\n\n<DataDisplayWithLoading \n  isLoading={!data} \n  data={data}\n  loadingText="Fetching data..."\n/>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"render-props-pattern",children:"Render Props Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const DataFetcher = createComponent(({ lens, url, children }) => {\n  const data = lens.useRefraction(null);\n  const loading = lens.useRefraction(true);\n  const error = lens.useRefraction(null);\n  \n  lens.useEffect(() => {\n    fetch(url)\n      .then(response => response.json())\n      .then(result => {\n        data.set(result);\n        loading.set(false);\n      })\n      .catch(err => {\n        error.set(err);\n        loading.set(false);\n      });\n  }, [url]);\n  \n  return children({\n    data: data.value,\n    loading: loading.value,\n    error: error.value\n  });\n});\n\n// Usage\n<DataFetcher url="/api/users">\n  {({ data, loading, error }) => {\n    if (loading) return <div>Loading users...</div>;\n    if (error) return <div>Error: {error.message}</div>;\n    return <UserList users={data} />;\n  }}\n</DataFetcher>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"compound-components",children:"Compound Components"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const Tabs = createComponent(({ lens, children, defaultTab = 0 }) => {\n  const activeTab = lens.useRefraction(defaultTab);\n  \n  return (\n    <div className="tabs">\n      {React.Children.map(children, (child, index) =>\n        React.cloneElement(child, {\n          isActive: index === activeTab.value,\n          onActivate: () => activeTab.set(index)\n        })\n      )}\n    </div>\n  );\n});\n\nconst Tab = createComponent(({ lens, title, children, isActive, onActivate }) => {\n  return (\n    <div className="tab">\n      <button \n        className={`tab-button ${isActive ? \'active\' : \'\'}`}\n        onClick={onActivate}\n      >\n        {title}\n      </button>\n      {isActive && (\n        <div className="tab-content">\n          {children}\n        </div>\n      )}\n    </div>\n  );\n});\n\n// Usage\n<Tabs defaultTab={0}>\n  <Tab title="Profile">\n    <UserProfile />\n  </Tab>\n  <Tab title="Settings">\n    <UserSettings />\n  </Tab>\n</Tabs>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,r.jsx)(n.h3,{id:"memo",children:"memo()"}),"\n",(0,r.jsx)(n.p,{children:"Prevent unnecessary re-renders with memoization:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { memo } from 'refract';\n\nconst ExpensiveComponent = memo(createComponent(({ lens, data }) => {\n  // Expensive computation or rendering\n  const processedData = lens.useDerived(() => {\n    return data.map(item => expensiveTransform(item));\n  }, [data]);\n  \n  return (\n    <div>\n      {processedData.value.map(item => (\n        <div key={item.id}>{item.name}</div>\n      ))}\n    </div>\n  );\n}));\n\n// Custom comparison function\nconst CustomMemoComponent = memo(\n  createComponent(({ lens, user }) => {\n    return <div>{user.name}</div>;\n  }),\n  (prevProps, nextProps) => {\n    // Only re-render if user ID changes\n    return prevProps.user.id === nextProps.user.id;\n  }\n);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"lazy",children:"lazy()"}),"\n",(0,r.jsx)(n.p,{children:"Code-split components for better performance:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { lazy, Suspense } from 'refract';\n\nconst LazyComponent = lazy(() => import('./HeavyComponent'));\n\nconst App = createComponent(({ lens }) => {\n  const showHeavy = lens.useRefraction(false);\n  \n  return (\n    <div>\n      <h1>My App</h1>\n      <button onClick={() => showHeavy.set(!showHeavy.value)}>\n        Toggle Heavy Component\n      </button>\n      \n      {showHeavy.value && (\n        <Suspense fallback={<div>Loading heavy component...</div>}>\n          <LazyComponent />\n        </Suspense>\n      )}\n    </div>\n  );\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"component-lifecycle",children:"Component Lifecycle"}),"\n",(0,r.jsx)(n.h3,{id:"mount-phase",children:"Mount Phase"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const LifecycleComponent = createComponent(({ lens }) => {\n  const data = lens.useRefraction(null);\n  \n  // Runs once when component mounts\n  lens.useEffect(() => {\n    console.log('Component mounted');\n    \n    // Fetch initial data\n    fetchData().then(data.set);\n    \n    // Cleanup on unmount\n    return () => {\n      console.log('Component unmounting');\n    };\n  }, []); // Empty dependency array\n  \n  return <div>{data.value || 'Loading...'}</div>;\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"update-phase",children:"Update Phase"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const UpdateComponent = createComponent(({ lens, userId }) => {\n  const user = lens.useRefraction(null);\n  \n  // Runs when userId changes\n  lens.useEffect(() => {\n    console.log('UserId changed:', userId);\n    fetchUser(userId).then(user.set);\n  }, [userId]); // Dependency array with userId\n  \n  return <div>{user.value?.name}</div>;\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.h3,{id:"component-error-boundaries",children:"Component Error Boundaries"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const ErrorBoundary = createComponent(({ lens, children }) => {\n  const hasError = lens.useRefraction(false);\n  const error = lens.useRefraction(null);\n  \n  // This would be handled by Refract\'s error system\n  if (hasError.value) {\n    return (\n      <div className="error-boundary">\n        <h2>Something went wrong</h2>\n        <details>\n          <summary>Error details</summary>\n          <pre>{error.value?.stack}</pre>\n        </details>\n        <button onClick={() => hasError.set(false)}>\n          Try again\n        </button>\n      </div>\n    );\n  }\n  \n  return children;\n});\n'})}),"\n",(0,r.jsx)(n.h3,{id:"safe-async-operations",children:"Safe Async Operations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const SafeAsyncComponent = createComponent(({ lens }) => {\n  const data = lens.useRefraction(null);\n  const error = lens.useRefraction(null);\n  \n  lens.useEffect(() => {\n    let cancelled = false;\n    \n    const fetchData = async () => {\n      try {\n        const result = await apiCall();\n        if (!cancelled) {\n          data.set(result);\n        }\n      } catch (err) {\n        if (!cancelled) {\n          error.set(err.message);\n        }\n      }\n    };\n    \n    fetchData();\n    \n    return () => {\n      cancelled = true;\n    };\n  }, []);\n  \n  if (error.value) {\n    return <div>Error: {error.value}</div>;\n  }\n  \n  return <div>{data.value || 'Loading...'}</div>;\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"testing-components",children:"Testing Components"}),"\n",(0,r.jsx)(n.h3,{id:"unit-testing",children:"Unit Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { render, fireEvent } from '@refract/testing-utils';\n\ndescribe('Counter Component', () => {\n  test('increments count when button clicked', () => {\n    const { getByText, getByRole } = render(<Counter initialCount={0} />);\n    \n    expect(getByText('Count: 0')).toBeInTheDocument();\n    \n    fireEvent.click(getByRole('button', { name: '+' }));\n    \n    expect(getByText('Count: 1')).toBeInTheDocument();\n  });\n  \n  test('decrements count when button clicked', () => {\n    const { getByText, getByRole } = render(<Counter initialCount={5} />);\n    \n    expect(getByText('Count: 5')).toBeInTheDocument();\n    \n    fireEvent.click(getByRole('button', { name: '-' }));\n    \n    expect(getByText('Count: 4')).toBeInTheDocument();\n  });\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"integration-testing",children:"Integration Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"test('UserProfile fetches and displays user data', async () => {\n  const mockUser = { id: 1, name: 'John Doe', email: 'john@example.com' };\n  \n  fetch.mockResolvedValueOnce({\n    json: async () => mockUser\n  });\n  \n  const { getByText, queryByText } = render(<UserProfile userId={1} />);\n  \n  // Initially shows loading\n  expect(getByText('Loading...')).toBeInTheDocument();\n  \n  // Wait for data to load\n  await waitFor(() => {\n    expect(queryByText('Loading...')).not.toBeInTheDocument();\n    expect(getByText('John Doe')).toBeInTheDocument();\n    expect(getByText('john@example.com')).toBeInTheDocument();\n  });\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"1-keep-components-pure",children:"1. Keep Components Pure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// \u2705 Good - Pure component\nconst PureComponent = createComponent(({ lens, name }) => {\n  return <h1>Hello, {name}!</h1>;\n});\n\n// \u274c Bad - Side effects in render\nconst ImpureComponent = createComponent(({ lens, name }) => {\n  console.log('Rendering...'); // Side effect!\n  return <h1>Hello, {name}!</h1>;\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-use-descriptive-names",children:"2. Use Descriptive Names"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// \u2705 Good\nconst UserProfileCard = createComponent(({ lens, user }) => {\n  // Component logic\n});\n\n// \u274c Bad\nconst Component1 = createComponent(({ lens, data }) => {\n  // Component logic\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-extract-complex-logic",children:"3. Extract Complex Logic"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// \u2705 Good - Logic in custom optic\nconst useUserData = (userId) => {\n  const user = useRefraction(null);\n  const loading = useRefraction(true);\n  \n  useEffect(() => {\n    fetchUser(userId).then(user.set).finally(() => loading.set(false));\n  }, [userId]);\n  \n  return { user: user.value, loading: loading.value };\n};\n\nconst UserProfile = createComponent(({ lens, userId }) => {\n  const { user, loading } = lens.useOptic(() => useUserData(userId), [userId]);\n  \n  if (loading) return <div>Loading...</div>;\n  return <div>{user.name}</div>;\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"4-handle-edge-cases",children:"4. Handle Edge Cases"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const SafeComponent = createComponent(({ lens, items = [] }) => {\n  if (!Array.isArray(items)) {\n    return <div>Invalid data provided</div>;\n  }\n  \n  if (items.length === 0) {\n    return <div>No items to display</div>;\n  }\n  \n  return (\n    <ul>\n      {items.map((item, index) => (\n        <li key={item.id || index}>\n          {item.name || 'Unnamed item'}\n        </li>\n      ))}\n    </ul>\n  );\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"related-apis",children:"Related APIs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./createApp",children:"createApp"})})," - Initialize applications with components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./useRefraction",children:"useRefraction"})})," - Manage component state"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./useEffect",children:"useEffect"})})," - Handle component side effects"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./useOptic",children:"useOptic"})})," - Use reusable logic in components"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var r=t(6540);const s={},o=r.createContext(s);function a(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);