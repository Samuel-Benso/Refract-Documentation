"use strict";(self.webpackChunkrefract_docs=self.webpackChunkrefract_docs||[]).push([[594],{4099:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api/api","title":"API Reference","description":"Welcome to the Refract API reference documentation. This section provides detailed information about the core APIs available in Refract.","source":"@site/docs/api/index.md","sourceDirName":"api","slug":"/api/","permalink":"/docs/api/","draft":false,"unlisted":false,"editUrl":"https://github.com/refract-js/refract/tree/main/docs/docs/api/index.md","tags":[],"version":"current","frontMatter":{"id":"api","title":"API Reference"}}');var s=n(4848),r=n(8453);const a={id:"api",title:"API Reference"},c="API Reference",o={},d=[{value:"Core APIs",id:"core-apis",level:2},{value:"Advanced Topics",id:"advanced-topics",level:2},{value:"Guides",id:"guides",level:2},{value:"Examples",id:"examples",level:2}];function l(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,s.jsx)(t.p,{children:"Welcome to the Refract API reference documentation. This section provides detailed information about the core APIs available in Refract."}),"\n",(0,s.jsx)(t.h2,{id:"core-apis",children:"Core APIs"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"./api/createApp",children:"createApp"})," - Initialize a new Refract application"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"./api/createComponent",children:"createComponent"})," - Create a new component"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"./api/useLens",children:"useLens"})," - Access the lens system for state management"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"./api/useOptic",children:"useOptic"})," - Work with optics for state manipulation"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"./api/createOptic",children:"createOptic"})," - Create reactive references to nested state"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"advanced-topics",children:"Advanced Topics"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/docs/advanced/performance",children:"Performance Optimization"})," - Learn how to optimize your Refract application"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/docs/advanced/testing",children:"Testing"})," - Best practices for testing Refract components"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"guides",children:"Guides"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/docs/tutorials/getting-started",children:"Getting Started"})," - A step-by-step guide to building your first Refract app"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/docs/concepts/state-management",children:"State Management"})," - Understanding state management in Refract"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/docs/concepts/effects",children:"Effects"})," - Working with side effects in Refract"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(t.p,{children:["Check out our ",(0,s.jsx)(t.a,{href:"https://github.com/refract-js/examples",children:"examples repository"})," for complete code samples and usage patterns."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var i=n(6540);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);