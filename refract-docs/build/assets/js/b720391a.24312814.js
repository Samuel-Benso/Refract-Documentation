"use strict";(self.webpackChunkrefract_docs=self.webpackChunkrefract_docs||[]).push([[8606],{7069:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var t=s(4848),r=s(8453);const i={},c="useOptic",a={id:"api/useOptic",title:"useOptic",description:"The useOptic hook allows you to use reusable logic patterns (optics) within components. Optics encapsulate complex stateful logic that can be shared across multiple components, providing a clean way to compose functionality.",source:"@site/docs/api/useOptic.md",sourceDirName:"api",slug:"/api/useOptic",permalink:"/docs/api/useOptic",draft:!1,unlisted:!1,editUrl:"https://github.com/refract-js/refract/tree/main/docs/docs/api/useOptic.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useEffect",permalink:"/docs/api/useEffect"},next:{title:"useFlash",permalink:"/docs/api/useFlash"}},o={},l=[{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"<code>opticFunction</code>",id:"opticfunction",level:3},{value:"<code>dependencies</code>",id:"dependencies",level:3},{value:"Return Value",id:"return-value",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Using Built-in Optics",id:"using-built-in-optics",level:3},{value:"Custom Optic Usage",id:"custom-optic-usage",level:3},{value:"Advanced Patterns",id:"advanced-patterns",level:2},{value:"Parameterized Optics",id:"parameterized-optics",level:3},{value:"Composed Optics",id:"composed-optics",level:3},{value:"Conditional Optics",id:"conditional-optics",level:3},{value:"Optic Dependencies",id:"optic-dependencies",level:2},{value:"Static Dependencies",id:"static-dependencies",level:3},{value:"Dynamic Dependencies",id:"dynamic-dependencies",level:3},{value:"Multiple Dependencies",id:"multiple-dependencies",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Memoizing Expensive Optics",id:"memoizing-expensive-optics",level:3},{value:"Avoiding Unnecessary Re-executions",id:"avoiding-unnecessary-re-executions",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Optic Error Boundaries",id:"optic-error-boundaries",level:3},{value:"Graceful Degradation",id:"graceful-degradation",level:3},{value:"Testing Optics with useOptic",id:"testing-optics-with-useoptic",level:2},{value:"Mocking Optics",id:"mocking-optics",level:3},{value:"Testing Optic Dependencies",id:"testing-optic-dependencies",level:3},{value:"Common Optic Patterns",id:"common-optic-patterns",level:2},{value:"Data Fetching Optic",id:"data-fetching-optic",level:3},{value:"Form Validation Optic",id:"form-validation-optic",level:3},{value:"Animation Optic",id:"animation-optic",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Use Descriptive Names",id:"1-use-descriptive-names",level:3},{value:"2. Keep Dependencies Specific",id:"2-keep-dependencies-specific",level:3},{value:"3. Handle Loading States",id:"3-handle-loading-states",level:3},{value:"4. Compose Optics Thoughtfully",id:"4-compose-optics-thoughtfully",level:3},{value:"Related APIs",id:"related-apis",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"useoptic",children:"useOptic"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"useOptic"})," hook allows you to use reusable logic patterns (optics) within components. Optics encapsulate complex stateful logic that can be shared across multiple components, providing a clean way to compose functionality."]}),"\n",(0,t.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const result = lens.useOptic(opticFunction, dependencies)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(n.h3,{id:"opticfunction",children:(0,t.jsx)(n.code,{children:"opticFunction"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"() => T"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Required:"})," Yes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," Function that returns the optic logic. Called on every render when dependencies change."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"dependencies",children:(0,t.jsx)(n.code,{children:"dependencies"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"any[]"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Required:"})," Yes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," Array of values that determine when the optic should be re-executed."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsx)(n.p,{children:"Returns the result of the optic function execution."}),"\n",(0,t.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.h3,{id:"using-built-in-optics",children:"Using Built-in Optics"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"import { useCounter } from '@refract/optics';\n\nconst CounterComponent = createComponent(({ lens }) => {\n  const counter = lens.useOptic(() => useCounter(0), []);\n  \n  return (\n    <div>\n      <p>Count: {counter.count}</p>\n      <button onClick={counter.decrement}>-</button>\n      <button onClick={counter.reset}>Reset</button>\n      <button onClick={counter.increment}>+</button>\n    </div>\n  );\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"custom-optic-usage",children:"Custom Optic Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// Custom optic for form handling\nconst useForm = (initialValues) => {\n  const values = useRefraction(initialValues);\n  const errors = useRefraction({});\n  \n  const setValue = (field, value) => {\n    values.set(prev => ({ ...prev, [field]: value }));\n    if (errors.value[field]) {\n      errors.set(prev => ({ ...prev, [field]: null }));\n    }\n  };\n  \n  const validate = () => {\n    const newErrors = {};\n    Object.keys(values.value).forEach(field => {\n      if (!values.value[field]) {\n        newErrors[field] = `${field} is required`;\n      }\n    });\n    errors.set(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  \n  return {\n    values: values.value,\n    errors: errors.value,\n    setValue,\n    validate\n  };\n};\n\n// Using the custom optic\nconst LoginForm = createComponent(({ lens }) => {\n  const form = lens.useOptic(() => useForm({\n    email: '',\n    password: ''\n  }), []);\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (form.validate()) {\n      console.log('Form submitted:', form.values);\n    }\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"email\"\n        value={form.values.email}\n        onChange={(e) => form.setValue('email', e.target.value)}\n        placeholder=\"Email\"\n      />\n      {form.errors.email && <span>{form.errors.email}</span>}\n      \n      <input\n        type=\"password\"\n        value={form.values.password}\n        onChange={(e) => form.setValue('password', e.target.value)}\n        placeholder=\"Password\"\n      />\n      {form.errors.password && <span>{form.errors.password}</span>}\n      \n      <button type=\"submit\">Login</button>\n    </form>\n  );\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"advanced-patterns",children:"Advanced Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"parameterized-optics",children:"Parameterized Optics"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const useFetch = (url, options = {}) => {\n  const data = useRefraction(null);\n  const loading = useRefraction(false);\n  const error = useRefraction(null);\n  \n  const fetchData = async () => {\n    loading.set(true);\n    error.set(null);\n    \n    try {\n      const response = await fetch(url, options);\n      const result = await response.json();\n      data.set(result);\n    } catch (err) {\n      error.set(err.message);\n    } finally {\n      loading.set(false);\n    }\n  };\n  \n  useEffect(() => {\n    fetchData();\n  }, [url]);\n  \n  return {\n    data: data.value,\n    loading: loading.value,\n    error: error.value,\n    refetch: fetchData\n  };\n};\n\nconst UserProfile = createComponent(({ lens, userId }) => {\n  const { data: user, loading, error, refetch } = lens.useOptic(\n    () => useFetch(`/api/users/${userId}`),\n    [userId]\n  );\n  \n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n  \n  return (\n    <div>\n      <h2>{user?.name}</h2>\n      <button onClick={refetch}>Refresh</button>\n    </div>\n  );\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"composed-optics",children:"Composed Optics"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const useUserDashboard = (userId) => {\n  const user = useFetch(`/api/users/${userId}`);\n  const posts = useFetch(`/api/users/${userId}/posts`);\n  const settings = useLocalStorage(`user-${userId}-settings`, {});\n  \n  const isLoading = user.loading || posts.loading;\n  const hasError = user.error || posts.error;\n  \n  return {\n    user: user.data,\n    posts: posts.data,\n    settings: settings.value,\n    updateSettings: settings.setValue,\n    isLoading,\n    hasError,\n    refreshAll: () => {\n      user.refetch();\n      posts.refetch();\n    }\n  };\n};\n\nconst Dashboard = createComponent(({ lens, userId }) => {\n  const dashboard = lens.useOptic(() => useUserDashboard(userId), [userId]);\n  \n  if (dashboard.isLoading) return <div>Loading dashboard...</div>;\n  if (dashboard.hasError) return <div>Error loading dashboard</div>;\n  \n  return (\n    <div>\n      <h1>Welcome, {dashboard.user?.name}</h1>\n      <button onClick={dashboard.refreshAll}>Refresh All</button>\n      {/* Dashboard content */}\n    </div>\n  );\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"conditional-optics",children:"Conditional Optics"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const ConditionalOptic = createComponent(({ lens, shouldUseAdvanced }) => {\n  const basicCounter = lens.useOptic(() => useCounter(0), []);\n  \n  const advancedCounter = lens.useOptic(() => useAdvancedCounter({\n    min: 0,\n    max: 100,\n    step: 5\n  }), []);\n  \n  const counter = shouldUseAdvanced ? advancedCounter : basicCounter;\n  \n  return (\n    <div>\n      <p>Count: {counter.count}</p>\n      <button onClick={counter.increment}>+</button>\n      <button onClick={counter.decrement}>-</button>\n    </div>\n  );\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"optic-dependencies",children:"Optic Dependencies"}),"\n",(0,t.jsx)(n.h3,{id:"static-dependencies",children:"Static Dependencies"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const StaticDependencies = createComponent(({ lens }) => {\n  // Optic runs once and never re-executes\n  const timer = lens.useOptic(() => useTimer(), []);\n  \n  return <div>Timer: {timer.seconds}</div>;\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"dynamic-dependencies",children:"Dynamic Dependencies"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const DynamicDependencies = createComponent(({ lens, config }) => {\n  // Optic re-executes when config changes\n  const api = lens.useOptic(() => useApiClient(config), [config]);\n  \n  return <div>API Status: {api.status}</div>;\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"multiple-dependencies",children:"Multiple Dependencies"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const MultipleDependencies = createComponent(({ lens, userId, theme }) => {\n  // Optic re-executes when either userId or theme changes\n  const userInterface = lens.useOptic(() => \n    useThemedUserInterface(userId, theme), \n    [userId, theme]\n  );\n  \n  return <div className={userInterface.className}>Content</div>;\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,t.jsx)(n.h3,{id:"memoizing-expensive-optics",children:"Memoizing Expensive Optics"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const ExpensiveOptic = createComponent(({ lens, data }) => {\n  // Memoize expensive computation\n  const processedData = lens.useOptic(() => {\n    return useExpensiveDataProcessor(data);\n  }, [data]);\n  \n  return <div>{processedData.result}</div>;\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"avoiding-unnecessary-re-executions",children:"Avoiding Unnecessary Re-executions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const OptimizedOptic = createComponent(({ lens, user }) => {\n  // Only re-execute when user ID changes, not when other user properties change\n  const userPreferences = lens.useOptic(() => \n    useUserPreferences(user.id), \n    [user.id] // Specific dependency instead of entire user object\n  );\n  \n  return <div>Theme: {userPreferences.theme}</div>;\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(n.h3,{id:"optic-error-boundaries",children:"Optic Error Boundaries"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const SafeOptic = createComponent(({ lens, config }) => {\n  const result = lens.useOptic(() => {\n    try {\n      return useRiskyOptic(config);\n    } catch (error) {\n      console.error('Optic error:', error);\n      return { error: error.message, data: null };\n    }\n  }, [config]);\n  \n  if (result.error) {\n    return <div>Error: {result.error}</div>;\n  }\n  \n  return <div>{result.data}</div>;\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"graceful-degradation",children:"Graceful Degradation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const GracefulOptic = createComponent(({ lens, features }) => {\n  const enhancement = lens.useOptic(() => {\n    if (features.advanced) {\n      try {\n        return useAdvancedFeatures();\n      } catch (error) {\n        console.warn('Advanced features unavailable:', error);\n        return useBasicFeatures();\n      }\n    }\n    return useBasicFeatures();\n  }, [features.advanced]);\n  \n  return <div>{enhancement.render()}</div>;\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"testing-optics-with-useoptic",children:"Testing Optics with useOptic"}),"\n",(0,t.jsx)(n.h3,{id:"mocking-optics",children:"Mocking Optics"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// Mock the optic for testing\njest.mock('@refract/optics', () => ({\n  useCounter: jest.fn()\n}));\n\nimport { useCounter } from '@refract/optics';\n\ndescribe('CounterComponent', () => {\n  test('uses counter optic correctly', () => {\n    const mockCounter = {\n      count: 5,\n      increment: jest.fn(),\n      decrement: jest.fn(),\n      reset: jest.fn()\n    };\n    \n    useCounter.mockReturnValue(mockCounter);\n    \n    const { getByText, getByRole } = render(<CounterComponent />);\n    \n    expect(getByText('Count: 5')).toBeInTheDocument();\n    \n    fireEvent.click(getByRole('button', { name: '+' }));\n    expect(mockCounter.increment).toHaveBeenCalled();\n  });\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testing-optic-dependencies",children:"Testing Optic Dependencies"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"test('re-executes optic when dependencies change', () => {\n  const mockOptic = jest.fn(() => ({ data: 'test' }));\n  \n  const TestComponent = createComponent(({ lens, dep }) => {\n    const result = lens.useOptic(mockOptic, [dep]);\n    return <div>{result.data}</div>;\n  });\n  \n  const { rerender } = render(<TestComponent dep=\"initial\" />);\n  \n  expect(mockOptic).toHaveBeenCalledTimes(1);\n  \n  rerender(<TestComponent dep=\"changed\" />);\n  \n  expect(mockOptic).toHaveBeenCalledTimes(2);\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"common-optic-patterns",children:"Common Optic Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"data-fetching-optic",children:"Data Fetching Optic"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const useFetchWithCache = (url) => {\n  const cache = useRefraction(new Map());\n  const data = useRefraction(null);\n  const loading = useRefraction(false);\n  \n  useEffect(() => {\n    if (cache.value.has(url)) {\n      data.set(cache.value.get(url));\n      return;\n    }\n    \n    loading.set(true);\n    fetch(url)\n      .then(response => response.json())\n      .then(result => {\n        cache.set(prev => new Map(prev).set(url, result));\n        data.set(result);\n      })\n      .finally(() => loading.set(false));\n  }, [url]);\n  \n  return { data: data.value, loading: loading.value };\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"form-validation-optic",children:"Form Validation Optic"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const useFormValidation = (values, rules) => {\n  const errors = useRefraction({});\n  const isValid = useRefraction(true);\n  \n  useEffect(() => {\n    const newErrors = {};\n    \n    Object.keys(rules).forEach(field => {\n      const value = values[field];\n      const rule = rules[field];\n      \n      if (rule.required && !value) {\n        newErrors[field] = `${field} is required`;\n      } else if (rule.minLength && value.length < rule.minLength) {\n        newErrors[field] = `${field} must be at least ${rule.minLength} characters`;\n      }\n    });\n    \n    errors.set(newErrors);\n    isValid.set(Object.keys(newErrors).length === 0);\n  }, [values, rules]);\n  \n  return {\n    errors: errors.value,\n    isValid: isValid.value\n  };\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"animation-optic",children:"Animation Optic"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const useAnimation = (duration = 300) => {\n  const progress = useRefraction(0);\n  const isAnimating = useRefraction(false);\n  \n  const animate = (from, to) => {\n    return new Promise(resolve => {\n      isAnimating.set(true);\n      const startTime = Date.now();\n      \n      const tick = () => {\n        const elapsed = Date.now() - startTime;\n        const normalizedProgress = Math.min(elapsed / duration, 1);\n        \n        progress.set(normalizedProgress);\n        \n        if (normalizedProgress < 1) {\n          requestAnimationFrame(tick);\n        } else {\n          isAnimating.set(false);\n          resolve();\n        }\n      };\n      \n      requestAnimationFrame(tick);\n    });\n  };\n  \n  return {\n    progress: progress.value,\n    isAnimating: isAnimating.value,\n    animate\n  };\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"1-use-descriptive-names",children:"1. Use Descriptive Names"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// \u2705 Good\nconst userAuth = lens.useOptic(() => useAuthentication(), []);\nconst formValidation = lens.useOptic(() => useFormValidation(values, rules), [values, rules]);\n\n// \u274c Bad\nconst auth = lens.useOptic(() => useAuth(), []);\nconst validation = lens.useOptic(() => useValidation(), []);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-keep-dependencies-specific",children:"2. Keep Dependencies Specific"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// \u2705 Good - Specific dependencies\nconst api = lens.useOptic(() => useApiClient(config.apiUrl), [config.apiUrl]);\n\n// \u274c Bad - Too broad\nconst api = lens.useOptic(() => useApiClient(config.apiUrl), [config]);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-handle-loading-states",children:"3. Handle Loading States"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// \u2705 Good - Proper loading handling\nconst data = lens.useOptic(() => useFetch(url), [url]);\n\nif (data.loading) return <div>Loading...</div>;\nif (data.error) return <div>Error: {data.error}</div>;\n\nreturn <div>{data.result}</div>;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-compose-optics-thoughtfully",children:"4. Compose Optics Thoughtfully"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// \u2705 Good - Logical composition\nconst dashboard = lens.useOptic(() => {\n  const user = useUser(userId);\n  const preferences = usePreferences(userId);\n  return { user, preferences };\n}, [userId]);\n\n// \u274c Bad - Unrelated optics composed\nconst mixed = lens.useOptic(() => {\n  const user = useUser(userId);\n  const weather = useWeather(location);\n  return { user, weather }; // Unrelated concerns\n}, [userId, location]);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"related-apis",children:"Related APIs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"./createOptic",children:"createOptic"})})," - Create custom optics"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"./useRefraction",children:"useRefraction"})})," - State management within optics"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"./useEffect",children:"useEffect"})})," - Side effects within optics"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"./createComponent",children:"createComponent"})})," - Components that use optics"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>a});var t=s(6540);const r={},i=t.createContext(r);function c(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);